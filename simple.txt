simple linear neural network model
x=float(input("Enter value of x: "))
w=float(input("Enter value of weight w: "))
b=float(input("Enter value of bias b: "))

net = int(w*x+b)
if(net<0):
    out=0
elif((net>=0)&(net<=1)):
    out =net
else:
    out=1
print("net=",net)
print("output=",out)

-------------------------------------------
Calculate the output of neural net using both binary and bipolar sigmoidal 
function
Example 1
# number of elements as input 
n = int(input("Enter number of elements: ")) 
# In[2]:
print("Enter the inputs")
inputs = [] # creating an empty list for inputs
# iterating till the range 
for i in range(0, n): 
	ele = float(input()) 
	inputs.append(ele) # adding the element 	
print(inputs) 
# In[3]:
print("Enter the weights")
# creating an empty list for weights
weights = [] 
# iterating till the range 
for i in range(0, n): 
	ele = float(input()) 
	weights.append(ele) # adding the element 	
print(weights) 
# In[4]:
print("The net input can be calculated as   Yin = x1w1 + x2w2 + x3w3")

# In[5]:
Yin = []
for i in range(0, n):
	Yin.append(inputs[i]*weights[i])
print(round(sum(Yin),3))

--------------
Example 2
n = int(input("Enter number of elements: ")) 

print("Enter the inputs: ")
inputs = [] # creating an empty list for inputs
for i in range(0, n): 
	ele = float(input()) 
	inputs.append(ele) # adding the element 
print(inputs) 

print("Enter the weights: ")
weights = [] 
for i in range(0, n): 
	ele = float(input()) 
	weights.append(ele) # adding the element 
print(weights) 

b=float(input("Enter bias value: "))
print("The net input can be calculated as   Yin = b + x1w1 + x2w2:")

Yin = []
for i in range(0, n):
	Yin.append(inputs[i]*weights[i])
print(round((sum(Yin)+b),3))

